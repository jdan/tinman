#!/usr/bin/env node

var fs = require('fs');
var program = require('commander');
var readline = require('readline');
var tinman = require('../');


/**
 * A simple prompt that writes `message` to stdout and invokes `callback`
 * with the data received from stdin
 */
function prompt(message, callback) {
  var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });

  rl.question(message, function (data) {
    callback(data);
    rl.close();
  });
}


/**
 * The `create` command creates a new tinman blog
 */
program
  .command('create')
  .description('creates a new tinman blog')
  .action(function () {
    var title;
    function feedback(err) {
      if (err) throw err;

      console.log([
        '',
        '  Your blog is ready! To get started:',
        '',
        '    cd ' + title + '/',
        '    tinman server',
        ''
      ].join('\n'));
    };

    // TODO: handle --with-templates

    if (program.args.length > 1) {
      title = program.args[0];
      tinman.createBlog(program.args[0], feedback);
    } else {
      prompt('Blog title: ', function (answer) {
        title = answer;
        tinman.createBlog(title, feedback);
      });
    }
  });


/**
 * The `new` command is used to generate an article
 */
program
  .command('new')
  .description('creates a new article')
  .action(function () {
    prompt('Title: ', function (title) {
      tinman.createArticle(title, function (err, filename) {
        if (err) throw err;

        console.log([
          '',
          '  Article generated at: ' + filename,
          ''
        ].join('\n'));
      });
    });
  });


/**
 * Run a server on port 3000 (or specify a different one with --port)
 */
program
  .command('server')
  .description('serves the blog (default: --port 3000)')
  .action(function () {
    var port = program.port || 3000;
    tinman.createServer(tinman.readConfig()).listen(port);
    console.log('Server listening on port ' + port + '...');
  });


/**
 * Add some options and parse argv
 */
program
  .version(require('../package.json').version)
  .option('-p, --port <port>', 'specifies the port to serve the blog on')
  .parse(process.argv);

if (!program.args.length) {
  program.help();
}
